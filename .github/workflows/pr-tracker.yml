name: Track PR Status

on:
  pull_request_target:
    types: [closed]

jobs:
  update-log:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            
            async function run() {
              console.log("Procesando PR cerrado");
              
              const pr = context.payload.pull_request;
              const repository = context.repo;
              
              // Obtener información del PR
              const prNumber = pr.number;
              const prTitle = pr.title;
              const prAuthor = pr.user.login;
              const targetBranch = pr.base.ref;
              const prMerged = pr.merged;
              const status = prMerged ? "MERGED" : "CLOSED";
              const now = new Date().toISOString();
              
              console.log(`PR #${prNumber} ${status}`);
              
              // Verificar si el archivo existe
              let content;
              let sha;
              try {
                const result = await github.rest.repos.getContent({
                  owner: repository.owner,
                  repo: repository.repo,
                  path: 'entregas-status.txt',
                });
                
                if (result.data) {
                  sha = result.data.sha;
                  content = Buffer.from(result.data.content, 'base64').toString();
                  console.log("Archivo encontrado, añadiendo nueva entrada");
                }
              } catch (error) {
                console.log("Archivo no encontrado, creando nuevo");
                content = "#PR|Descripción|Estudiante|Fecha|Estado|Rama|Cambios\n---|---|---|---|---|---|---\n";
              }
              
              // Añadir nueva línea
              const newLine = `#${prNumber}|'${prTitle}'|${prAuthor}|${now}|${status}|${targetBranch}|+/-\n`;
              content += newLine;
              
              // Guardar cambios
              await github.rest.repos.createOrUpdateFileContents({
                owner: repository.owner,
                repo: repository.repo,
                path: 'entregas-status.txt',
                message: `Update PR status for #${prNumber}`,
                content: Buffer.from(content).toString('base64'),
                sha: sha,
                committer: {
                  name: 'GitHub Action',
                  email: 'action@github.com'
                }
              });
              
              console.log("Archivo actualizado correctamente");
            }
            
            run().catch(error => {
              console.error("Error:", error);
              core.setFailed(error.message);
            });
